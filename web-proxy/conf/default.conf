server {
	listen 80 default_server;
	listen [::]:80;

	add_header Cache-Control "max-age=0, no-cache, no-store, must-revalidate";
	add_header Pragma "no-cache";

	# You may need this to prevent return 404 recursion.
	location = /404.html {
		internal;
	}

	location /api {
		proxy_pass https://gateway:8000;

    	proxy_set_header Host				$host;
		proxy_redirect						off;
    	proxy_set_header X-Real-IP			$remote_addr;
    	proxy_set_header X-Forwarded-For	$proxy_add_x_forwarded_for;
    	proxy_set_header X-Forwarded-Proto	$scheme;
    	proxy_set_header X-Forwarded-Host	$host;
    	proxy_set_header X-Forwarded-Port	$server_port;
	}

	location / {
		proxy_pass https://frontend:3000;

    	proxy_set_header Host				$host;
		proxy_redirect						off;
    	proxy_set_header X-Real-IP			$remote_addr;
    	proxy_set_header X-Forwarded-For	$proxy_add_x_forwarded_for;
    	proxy_set_header X-Forwarded-Proto	$scheme;
    	proxy_set_header X-Forwarded-Host	$host;
    	proxy_set_header X-Forwarded-Port	$server_port;
	}
}

server {
	listen 443 ssl;
	listen [::]:443;

	add_header Cache-Control "max-age=0, no-cache, no-store, must-revalidate";
	add_header Pragma "no-cache";

	ssl_certificate /etc/ssl/private/pinting.crt;
	ssl_certificate_key /etc/ssl/private/pinting.key;

	ssl_protocols TLSv1.2 TLSv1.3;

	# You may need this to prevent return 404 recursion.
	location = /404.html {
		internal;
	}

	location /api {
		proxy_pass https://gateway:8000;

    	proxy_set_header Host				$host;
		proxy_redirect						off;
    	proxy_set_header X-Real-IP			$remote_addr;
    	proxy_set_header X-Forwarded-For	$proxy_add_x_forwarded_for;
    	proxy_set_header X-Forwarded-Proto	$scheme;
    	proxy_set_header X-Forwarded-Host	$host;
    	proxy_set_header X-Forwarded-Port	$server_port;
	}

	location / {
		proxy_pass https://frontend:3000;

    	proxy_set_header Host				$host;
		proxy_redirect						off;
    	proxy_set_header X-Real-IP			$remote_addr;
    	proxy_set_header X-Forwarded-For	$proxy_add_x_forwarded_for;
    	proxy_set_header X-Forwarded-Proto	$scheme;
    	proxy_set_header X-Forwarded-Host	$host;
    	proxy_set_header X-Forwarded-Port	$server_port;
	}

}